<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://www.briglamoreaux.com/tag/nginx/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://www.briglamoreaux.com/" rel="alternate" type="text/html" />
  <updated>2023-06-22T22:21:27+00:00</updated>
  <id>https://www.briglamoreaux.com/tag/nginx/feed.xml</id>

  
  
  

  
    <title type="html">Brig Lamoreaux | </title>
  

  
    <subtitle>Long term storage for a forgetful mind</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Symfony denied Access</title>
      <link href="https://www.briglamoreaux.com/2014/07/14/symfony-denied-access.html" rel="alternate" type="text/html" title="Symfony denied Access" />
      <published>2014-07-14T00:00:00+00:00</published>
      <updated>2014-07-14T00:00:00+00:00</updated>
      <id>https://www.briglamoreaux.com/2014/07/14/symfony-denied-access</id>
      <content type="html" xml:base="https://www.briglamoreaux.com/2014/07/14/symfony-denied-access.html">&lt;p&gt;Moving my Symfony app to a QA server showed me how rude the server is.&lt;/p&gt;

&lt;p&gt;I could see the home page right after I copied the project to the new machine with not problem (except for modifying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app.config.php&lt;/code&gt; and various file permission ownership issues). Nevertheless, the real problem came when I tried navigating to any other route besides the index. Each time I would get a 403 Access denied error.&lt;/p&gt;

&lt;p&gt;Apparently the server “understood the request, but is refusing to fulfill it”. Thanks. I especially like how the &lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html&quot;&gt;guideline for 403 errors&lt;/a&gt; says&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;…if the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That sounds good because I really don’t know why I’m not seeing my page and I would really like to know why the server is &lt;em&gt;refusing&lt;/em&gt; to fulfill it. In my case I am given the clear description of ”&lt;strong&gt;Access denied&lt;/strong&gt;.” Thanks again. After much searching and testing I found &lt;a href=&quot;http://askubuntu.com/questions/164627/nginx-php-fpm-access-denied-error&quot;&gt;the solution&lt;/a&gt;. The fix was to modify my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php.ini&lt;/code&gt; and restart the service&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi /etc/php5/fpm/php.ini

&lt;span class=&quot;c&quot;&gt;# Edit line&lt;/span&gt;
cgi.fix_pathinfo&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m sure there is a better way to restart this service.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps &lt;span class=&quot;nt&quot;&gt;-eaf&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;php 
root 1269 1 0 16:39 ? 00:00:00 php-fpm: master process &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/php5/fpm/php-fpm.conf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  

&lt;span class=&quot;nb&quot;&gt;sudo kill &lt;/span&gt;1269 
ps &lt;span class=&quot;nt&quot;&gt;-eaf&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;php 
root 1436 1 6 17:49 ? 00:00:00 php-fpm: master process &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/etc/php5/fpm/php-fpm.conf&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I’m sure there are more ways for a server to be helpful.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Brig Lamoreaux</name>
        
        
      </author>

      

      
        <category term="software" />
      
        <category term="linux" />
      
        <category term="nginx" />
      
        <category term="php" />
      
        <category term="symfony" />
      

      
        <summary type="html">Moving my Symfony app to a QA server showed me how rude the server is.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Proxy Node through nginx</title>
      <link href="https://www.briglamoreaux.com/2012/01/11/proxy-node-through-nginx.html" rel="alternate" type="text/html" title="Proxy Node through nginx" />
      <published>2012-01-11T00:00:00+00:00</published>
      <updated>2012-01-11T00:00:00+00:00</updated>
      <id>https://www.briglamoreaux.com/2012/01/11/proxy-node-through-nginx</id>
      <content type="html" xml:base="https://www.briglamoreaux.com/2012/01/11/proxy-node-through-nginx.html">&lt;p&gt;Once I got node service setup on my server I wasn’t happy with having to specify a port. Looking around I see others use nginx to listen on port 80 and proxy everything to node.&lt;/p&gt;

&lt;p&gt;I really don’t know too much about security but read that in order to run on port 80 you need to run as root. If I run node as root, that could expose my system to hackers who could find an exploit in node and take over my system because I’m running as root. So to avoid that, run nginx in a special way to get port 80 going.&lt;/p&gt;

&lt;p&gt;Although it seems like nginx is now exposed. If not, why can’t I just run node the same way I start nginx?&lt;/p&gt;

&lt;p&gt;Despite my own lack of understanding, having nginx in front will be useful if I want to serve up static images without having to go through node.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install nginx&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Follow the instruction to install &lt;a href=&quot;http://library.linode.com/web-servers/nginx/installation/debian-6-squeeze&quot;&gt;nginx&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&amp;lt;/li&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Forward request to node&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Edit nginx config at
 ```bash
 vi /opt/nginx/conf/nginx.conf&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;worker_processes  1;&lt;/p&gt;

    &lt;p&gt;error_log  /var/log/nginx/error.log notice;&lt;/p&gt;

    &lt;p&gt;events {
     worker_connections  1024;
 }&lt;/p&gt;

    &lt;p&gt;http {
     include       mime.types;
     default_type  application/octet-stream;
     access_log    /var/log/nginx/access.log;
     sendfile      on;
     keepalive_timeout  65;&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; # Define the node service 
 upstream node_service {
     server 127.0.0.1:9451;
 }

 server {
     listen       80;
     server_name  localhost;

     # Proxy traffic to node service
     location / {
         # add proxy headers
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header Host $http_host;
         proxy_set_header X-NginX-Proxy true;
         # Here is where node service is specified
         proxy_pass http://node_service/;
         proxy_redirect off;
     }
 }  }  ```
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://pau.calepin.co/how-to-deploy-a-nodejs-application-with-monit-nginx-and-bouncy.html&quot;&gt;Proxy node with nginx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://library.linode.com/web-servers/nginx/installation/debian-6-squeeze&quot;&gt;Install NGinx&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6109089/how-do-i-run-node-js-on-port-80&quot;&gt;Point nginx to node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Brig Lamoreaux</name>
        
        
      </author>

      

      
        <category term="software" />
      
        <category term="nginx" />
      
        <category term="nodejs" />
      

      
        <summary type="html">Once I got node service setup on my server I wasn’t happy with having to specify a port. Looking around I see others use nginx to listen on port 80 and proxy everything to node.</summary>
      

      
      
    </entry>
  
</feed>
